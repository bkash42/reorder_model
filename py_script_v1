# -*- coding: utf-8 -*-
"""
To be used with Saved Search: 'Reorder Model Excel'
"""

import pandas as pd
import numpy as np

# Import CSV
df = pd.read_csv('Reorder.csv')

# Convert columns to numeric values to be used in calculations
cols_to_convert = ['Quantity Available', 'On Order', 'In Transit Qty', 'SKU Backlog', 'Child Backlog', 'Build Point', 'Preferred Stock Level', 'Re Order Multiple', 'MOQ', 'Vendor Price']
for col in cols_to_convert:
    df[col] = pd.to_numeric(df[col], errors='coerce')                     

# Calculate if the product needs to be ordered, TRUE if yes, FALSE if no
df['Need to Order'] = df['Quantity Available'] + df['On Order'] + df['In Transit Qty'] - df['SKU Backlog'] - df['Child Backlog'] < df['Build Point']

# Remove items that do not need to be ordered from df
df = df[df['Need to Order'] == True]

# Calculate the order quantity
df['Order Quantity'] = np.ceil(df['Preferred Stock Level'] - (df['Quantity Available'] + df['On Order'] + df['In Transit Qty'] - df['SKU Backlog'] - df['Child Backlog']))

# Round up to the nearest multiple of the reorder multiple
df['Order Quantity'] = (df['Order Quantity'] + df['Re Order Multiple'] - 1) // df['Re Order Multiple'] * df['Re Order Multiple']

# Apply the minimum order quantity
df.loc[df['Order Quantity'] < df['MOQ'], 'Order Quantity'] = df['MOQ']


# Calculate Subtotal (Order Qty * Vendor Price)
df['Order Subtotal'] = df['Order Quantity'] * df['Vendor Price']


# Sort df by Vendor and Order Subtotal
df = df.sort_values(by=['Vendor','Order Subtotal'], ascending=[True, False])

# Output CSV
df.to_csv('output.csv', index=False)
